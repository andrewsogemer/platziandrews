/*
PROGRAMA: Verificador de N√∫meros
DESCRIPCI√ìN: Pide al usuario un n√∫mero y muestra si es positivo, negativo o cero
*/

console.log("=== VERIFICADOR DE N√öMEROS ===\n");

// Funci√≥n principal que verifica el tipo de n√∫mero
function verificarNumero(numero) {
    // Verificar si el valor es un n√∫mero v√°lido
    if (isNaN(numero)) {
        return "‚ùå Error: Por favor, ingresa un n√∫mero v√°lido";
    }
    
    // Estructura condicional para determinar el tipo de n√∫mero
    if (numero > 0) {
        return `‚úÖ ${numero} es un n√∫mero POSITIVO`;
    } else if (numero < 0) {
        return `‚ùå ${numero} es un n√∫mero NEGATIVO`;
    } else {
        return `üîµ ${numero} es CERO`;
    }
}

// Funci√≥n para obtener entrada del usuario (simulada)
function obtenerNumeroUsuario() {
    // En un entorno real, esto ser√≠a con prompt() o input HTML
    // Aqu√≠ simulamos diferentes entradas para demostrar
    const ejemplos = [5, -3, 0, 10.5, -7.2, "abc", ""];
    
    console.log("Ejemplos de verificaci√≥n:\n");
    
    ejemplos.forEach((valor, index) => {
        console.log(`Ejemplo ${index + 1}:`);
        console.log(`Entrada: ${valor}`);
        console.log(`Resultado: ${verificarNumero(valor)}`);
        console.log("---");
    });
}

// Funci√≥n alternativa usando prompt() (para navegador)
function verificarConPrompt() {
    console.log("\n=== VERSI√ìN CON PROMPT ===");
    
    // Solicitar entrada al usuario
    const entrada = prompt("Ingresa un n√∫mero:");
    
    // Verificar si el usuario cancel√≥
    if (entrada === null) {
        console.log("Operaci√≥n cancelada por el usuario");
        return;
    }
    
    // Verificar si el input est√° vac√≠o
    if (entrada.trim() === '') {
        console.log("‚ö†Ô∏è Por favor, ingresa un n√∫mero");
        return;
    }
    
    // Convertir a n√∫mero y verificar
    const numero = parseFloat(entrada);
    const resultado = verificarNumero(numero);
    
    console.log(`Entrada: ${entrada}`);
    console.log(`Resultado: ${resultado}`);
    
    // Mostrar resultado en alert tambi√©n
    alert(resultado);
}

// Funci√≥n para procesar m√∫ltiples n√∫meros
function procesarListaNumeros(numeros) {
    console.log("\n=== PROCESANDO LISTA DE N√öMEROS ===");
    
    numeros.forEach((numero, index) => {
        console.log(`${index + 1}. ${verificarNumero(numero)}`);
    });
}

// Ejecutar ejemplos
obtenerNumeroUsuario();

// Ejemplo con lista de n√∫meros
const listaNumeros = [15, -8, 0, 3.14, -2.5, 100, -0.1];
procesarListaNumeros(listaNumeros);

// Funci√≥n para uso interactivo
function iniciarVerificador() {
    console.log("\n=== MODO INTERACTIVO ===");
    console.log("Para usar en navegador, ejecuta: verificarConPrompt()");
    console.log("Para procesar una lista, ejecuta: procesarListaNumeros([1, -5, 0])");
}

// Mostrar instrucciones
iniciarVerificador();

// Exportar funciones para uso en otros archivos
if (typeof module !== 'undefined' && module.exports) {
    module.exports = {
        verificarNumero,
        obtenerNumeroUsuario,
        verificarConPrompt,
        procesarListaNumeros
    };
} 